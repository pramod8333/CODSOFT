def load_contacts():
    if os.path.exists(CONTACT_FILE):
        with open(CONTACT_FILE, "r") as f:
            return json.load(f)
    return []

def save_contacts(contacts):
    with open(CONTACT_FILE, "w") as f:
        json.dump(contacts, f, indent=4)

def add_contact(contacts):
    print("\n--- Add New Contact ---")
    name = input("Name     : ").strip()
    phone = input("Phone    : ").strip()
    email = input("Email    : ").strip()
    address = input("Address  : ").strip()

    contacts.append({
        "name": name,
        "phone": phone,
        "email": email,
        "address": address
    })
    save_contacts(contacts)
    print("✅ Contact added successfully.")

def view_contacts(contacts):
    print("\n--- Contact List ---")
    if not contacts:
        print("No contacts found.")
        return
    for idx, c in enumerate(contacts, 1):
        print(f"{idx}. {c['name']} | 📞 {c['phone']}")

def search_contact(contacts):
    print("\n--- Search Contact ---")
    keyword = input("Enter name or phone to search: ").strip().lower()
    results = [c for c in contacts if keyword in c['name'].lower() or keyword in c['phone']]
    if results:
        for c in results:
            print(f"\n👤 Name   : {c['name']}")
            print(f"📞 Phone  : {c['phone']}")
            print(f"📧 Email  : {c['email']}")
            print(f"🏠 Address: {c['address']}")
    else:
        print("❌ No contact found.")

def update_contact(contacts):
    view_contacts(contacts)
    try:
        index = int(input("Enter the contact number to update: ")) - 1
        if 0 <= index < len(contacts):
            print("Leave field empty to keep current value.")
            contact = contacts[index]
            contact["name"] = input(f"Name ({contact['name']}): ") or contact["name"]
            contact["phone"] = input(f"Phone ({contact['phone']}): ") or contact["phone"]
            contact["email"] = input(f"Email ({contact['email']}): ") or contact["email"]
            contact["address"] = input(f"Address ({contact['address']}): ") or contact["address"]
            save_contacts(contacts)
            print("✅ Contact updated.")
        else:
            print("❌ Invalid number.")
    except ValueError:
        print("❌ Invalid input.")

def delete_contact(contacts):
    view_contacts(contacts)
    try:
        index = int(input("Enter the contact number to delete: ")) - 1
        if 0 <= index < len(contacts):
            confirm = input(f"Are you sure you want to delete {contacts[index]['name']}? (y/n): ").lower()
            if confirm == 'y':
                deleted = contacts.pop(index)
                save_contacts(contacts)
                print(f"✅ Contact '{deleted['name']}' deleted.")
        else:
            print("❌ Invalid number.")
    except ValueError:
        print("❌ Invalid input.")

def main():
    contacts = load_contacts()

    while True:
        print("\n📒 Contact Management System")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Choose an option (1-6): ")

        if choice == "1":
            add_contact(contacts)
        elif choice == "2":
            view_contacts(contacts)
        elif choice == "3":
            search_contact(contacts)
        elif choice == "4":
            update_contact(contacts)
        elif choice == "5":
            delete_contact(contacts)
        elif choice == "6":
            print("👋 Goodbye!")
            break
        else:
            print("❌ Invalid choice.")

if __name__ == "__main__":
    main()
